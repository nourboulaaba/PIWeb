{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('backoffice/css/app.css') }}">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap" rel="stylesheet">
    <style>
        /* Fond de la page de connexion */
        body {
             background: url('/frontoffice/img/login.jpg') no-repeat center center fixed;
            background-size: cover;
            font-family: 'Inter', sans-serif;
        }
         .card {
            border: none;
            border-radius: 1.2rem;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
            background: rgba(255, 255, 255, 0.85);
        }

        /* Définir la carte avec un fond semi-transparent */
        .login-container {
            background: rgba(255, 255, 255, 0.9);
            border-radius: 10px;
            padding: 40px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
.form-control.is-invalid {
            border-color: #dc3545;
            background-image: none;
        }
        /* Style pour l'alert-danger */
        .alert-danger {
            background-color: #f8d7da;
            border-color: #f5c6cb;
            color: #842029; /* Texte foncé */
        }

        .social-login {
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #ddd;
        }

        .btn-google {
            background-color: #DB4437;
            color: white;
        }

        .btn-google:hover {
            background-color: #C53929;
            color: white;
        }

        /* Style du logo */
        .logo img {
            width: 180px; /* Agrandi le logo */
            margin-bottom: 20px;
        }
    </style>
{% endblock %}

{% block body %}
    <main class="d-flex w-100">
        <div class="container d-flex flex-column">
            <div class="row vh-100">
                <div class="col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100">
                    <div class="d-table-cell align-middle">

                        <!-- Logo -->
                        <div class="text-center mt-4 logo">   <img src="/frontoffice/img/logoTrueMAtch.png" alt="TRUEMATCH Logo" class="logo">
                        </div>

                        <div class="text-center mt-4">
                            <h1 class="h2">Bienvenue</h1>
                            <p class="lead">Connectez-vous à votre compte pour continuer</p>
                        </div>

                        {# Les messages flash seront affichés via SweetAlert dans le bloc javascripts #}

                        <!-- Formulaire de connexion avec le design -->
                        <div class="card login-container">
                            <div class="card-body">
                                <div class="m-sm-4">
                                    <form method="post" novalidate id="loginForm">
                                        {% if error %}
                                            <div class="alert alert-danger">
                                                {{ error.messageKey|trans(error.messageData, 'security') }}
                                            </div>
                                        {% endif %}

                                        <div class="mb-3">
                                            <label class="form-label">Email</label>
                                            <input type="email"
                                                   id="email"
                                                   class="form-control form-control-lg"
                                                   name="email"
                                                   value="{{ last_username }}"
                                                   placeholder="Votre email"
                                                   required
                                                   autofocus>
                                            <div id="emailError" class="invalid-feedback"></div>
                                        </div>

                                        <div class="mb-3">
                                            <label class="form-label">Mot de passe</label>
                                            <input type="password"
                                                   id="password"
                                                   class="form-control form-control-lg"
                                                   name="password"
                                                   placeholder="Votre mot de passe"
                                                   required>
                                            <div id="passwordError" class="invalid-feedback"></div>
                                            <small>
                                                <a href="#">Mot de passe oublié ?</a>
                                            </small>
                                        </div>

                                        <div class="mb-3">
                                            <label class="form-check">
                                                <input class="form-check-input" type="checkbox" name="_remember_me">
                                                <span class="form-check-label">
                                                    Se souvenir de moi
                                                </span>
                                            </label>
                                        </div>

                                        <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">

                                        <div class="text-center mt-3">
                                            <button type="submit" class="btn btn-lg btn-primary w-100">
                                                Connexion
                                            </button>
                                        </div>

                                        <div class="text-center mt-3">
                                            <a href="{{ path('app_signup') }}" class="btn btn-lg btn-outline-secondary w-100">
                                                Inscrivez-vous
                                            </a>
                                        </div>

                                        <div class="social-login text-center">
                                            <p class="mb-2">Ou connectez-vous avec</p>
                                            <a href="#" class="btn btn-google">
                                                <i class="align-middle me-1" data-feather="mail"></i> Google
                                            </a>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </main>
{% endblock %}

{% block javascripts %}
    <script src="{{ asset('backoffice/js/app.js') }}"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Affichage des messages flash avec SweetAlert
        document.addEventListener("DOMContentLoaded", function () {
            {% for label, messages in app.flashes %}
                {% for message in messages %}
                    Swal.fire({
                        title: '{{ label == "success" ? "Succès" : (label == "warning" ? "Attention" : (label == "info" ? "Information" : "Erreur")) }}',
                        html: '{{ message|raw|escape('js') }}',
                        icon: '{{ label == "success" ? "success" : (label == "warning" ? "warning" : (label == "info" ? "info" : "error")) }}',
                        confirmButtonText: 'OK',
                        confirmButtonColor: '{{ label == "success" ? "#28a745" : (label == "warning" ? "#ffc107" : (label == "info" ? "#17a2b8" : "#dc3545")) }}'
                    });
                {% endfor %}
            {% endfor %}

            {% for message in app.flashes('verify_email_error') %}
                Swal.fire({
                    title: 'Erreur de vérification',
                    html: '{{ message|escape('js') }}',
                    icon: 'error',
                    confirmButtonText: 'OK',
                    confirmButtonColor: '#dc3545'
                });
            {% endfor %}

            {% if app.session.get('flash_warning') %}
                Swal.fire({
                    title: 'Attention',
                    html: '{{ app.session.get('flash_warning')|raw|escape('js') }}',
                    icon: 'warning',
                    confirmButtonText: 'OK',
                    confirmButtonColor: '#ffc107'
                });
                {% set _ = app.session.remove('flash_warning') %}
            {% endif %}

            // Validations JavaScript
            const form = document.getElementById('loginForm');
            const emailField = document.getElementById('email');
            const passwordField = document.getElementById('password');
            const emailError = document.getElementById('emailError');
            const passwordError = document.getElementById('passwordError');

            function validateEmail(email) {
                if (!email.trim()) return { isValid: false, message: "L'email est requis" };
                const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                return {
                    isValid: re.test(String(email).toLowerCase()),
                    message: "Format d'adresse email invalide"
                };
            }

            function validatePassword(password) {
                if (!password.trim()) return { isValid: false, message: "Le mot de passe est requis" };
                return {
                    isValid: password.length >= 9,
                    message: "Le mot de passe doit contenir au moins 9 caractères"
                };
            }

            function setValidationState(element, errorElement, validation) {
                if (validation.isValid) {
                    element.classList.remove('is-invalid');
                    element.classList.add('is-valid');
                    errorElement.textContent = "";
                } else {
                    element.classList.remove('is-valid');
                    element.classList.add('is-invalid');
                    errorElement.textContent = validation.message;
                }
                return validation.isValid;
            }

            // Validation lors de la saisie
            emailField.addEventListener('input', function () {
                const validation = validateEmail(emailField.value);
                setValidationState(emailField, emailError, validation);
            });

            passwordField.addEventListener('input', function () {
                const validation = validatePassword(passwordField.value);
                setValidationState(passwordField, passwordError, validation);
            });

            // Validation lors de la perte de focus
            emailField.addEventListener('blur', function() {
                const validation = validateEmail(emailField.value);
                setValidationState(emailField, emailError, validation);
            });

            passwordField.addEventListener('blur', function() {
                const validation = validatePassword(passwordField.value);
                setValidationState(passwordField, passwordError, validation);
            });

            // Validation du formulaire à la soumission
            form.addEventListener('submit', function(event) {
                let isFormValid = true;

                const emailValidation = validateEmail(emailField.value);
                isFormValid = setValidationState(emailField, emailError, emailValidation) && isFormValid;

                const passwordValidation = validatePassword(passwordField.value);
                isFormValid = setValidationState(passwordField, passwordError, passwordValidation) && isFormValid;

                if (!isFormValid) {
                    event.preventDefault();
                }
            });
        });
    </script>
{% endblock %}
