{% block stylesheets %}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            background: url('/frontoffice/img/background-1.jpg') no-repeat center center fixed;
            background-size: cover;
            font-family: 'Inter', sans-serif;
        }
        .card {
            border: none;
            border-radius: 1.2rem;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
            background: rgba(255, 255, 255, 0.85);
        }
        .form-control.is-invalid {
            border-color: #dc3545;
            background-image: none;
        }
        .btn-primary {
            background-color: #0061f2;
            border: none;
            border-radius: 0.5rem;
            padding: 0.75rem;
            font-weight: 600;
        }
        .btn-primary:hover {
            background-color: #004bb5;
        }
        .small-text {
            font-size: 0.9rem;
        }
        .alert-danger {
            color: #842029;
        }
        .logo {
            width: 180px; /* Agrandi le logo */
            margin-bottom: 20px;
        }
    </style>
{% endblock %}



{% block body %}
<div class="container d-flex align-items-center justify-content-center vh-100">
    <div class="col-md-6 col-lg-5">
        <div class="text-center mb-4">
            <img src="/frontoffice/img/logoTrueMAtch.png" alt="TRUEMATCH Logo" class="logo">
            <h1 class="h4 fw-bold text-white">Rejoignez l’aventure TrueMatch</h1>
            <p class="text-light">Créez votre espace personnel et accédez à nos services RH</p>
        </div>

        <div class="card p-4">
            <div class="card-body">

                {# Les messages flash seront affichés via SweetAlert dans le bloc javascripts #}

                {{ form_start(registrationForm, {'attr': {'novalidate': 'novalidate'}}) }}

                    <div class="mb-3">
                        {{ form_label(registrationForm.first_name) }}
                        {{ form_widget(registrationForm.first_name, {
                            'attr': {'class': 'form-control' ~ (registrationForm.first_name.vars.valid == false ? ' is-invalid' : '')}
                        }) }}
                        {% for error in registrationForm.first_name.vars.errors %}
                            <div class="text-danger">{{ error.message }}</div>
                        {% endfor %}
                    </div>

                    <div class="mb-3">
                        {{ form_label(registrationForm.last_name) }}
                        {{ form_widget(registrationForm.last_name, {
                            'attr': {'class': 'form-control' ~ (registrationForm.last_name.vars.valid == false ? ' is-invalid' : '')}
                        }) }}
                        {% for error in registrationForm.last_name.vars.errors %}
                            <div class="text-danger">{{ error.message }}</div>
                        {% endfor %}
                    </div>

                    <div class="mb-3">
                        {{ form_label(registrationForm.email) }}
                        {{ form_widget(registrationForm.email, {
                            'attr': {'class': 'form-control' ~ (registrationForm.email.vars.valid == false ? ' is-invalid' : '')}
                        }) }}
                        {% for error in registrationForm.email.vars.errors %}
                            <div class="text-danger">{{ error.message }}</div>
                        {% endfor %}
                    </div>

                    <div class="mb-3">
                        {{ form_label(registrationForm.password.first) }}
                        {{ form_widget(registrationForm.password.first, {
                            'attr': {'class': 'form-control' ~ (registrationForm.password.first.vars.valid == false ? ' is-invalid' : '')}
                        }) }}
                        {% for error in registrationForm.password.first.vars.errors %}
                            <div class="text-danger">{{ error.message }}</div>
                        {% endfor %}
                    </div>

                    <div class="mb-3">
                        {{ form_label(registrationForm.password.second) }}
                        {{ form_widget(registrationForm.password.second, {
                            'attr': {'class': 'form-control' ~ (registrationForm.password.second.vars.valid == false ? ' is-invalid' : '')}
                        }) }}
                        {% for error in registrationForm.password.second.vars.errors %}
                            <div class="text-danger">{{ error.message }}</div>
                        {% endfor %}
                    </div>



                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary">Créer mon espace</button>
                    </div>

                    <div class="text-center mt-3 small-text">
                        Déjà inscrit ? <a href="{{ path('app_login') }}">Connexion</a>
                    </div>

                {{ form_end(registrationForm) }}

            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Affichage des messages flash avec SweetAlert
    document.addEventListener("DOMContentLoaded", function() {
        {% for label, messages in app.flashes %}
            {% for message in messages %}
                Swal.fire({
                    title: '{{ label == "success" ? "Succès" : (label == "warning" ? "Attention" : (label == "info" ? "Information" : "Erreur")) }}',
                    html: '{{ message|raw|escape('js') }}',
                    icon: '{{ label == "success" ? "success" : (label == "warning" ? "warning" : (label == "info" ? "info" : "error")) }}',
                    confirmButtonText: 'OK',
                    confirmButtonColor: '{{ label == "success" ? "#28a745" : (label == "warning" ? "#ffc107" : (label == "info" ? "#17a2b8" : "#dc3545")) }}'
                });
            {% endfor %}
        {% endfor %}

        // Validation des champs du formulaire
        const firstName = document.querySelector('input[name$="[first_name]"]');
        const lastName = document.querySelector('input[name$="[last_name]"]');
        const email = document.querySelector('input[name$="[email]"]');
        const password1 = document.querySelector('input[name$="[password][first]"]');
        const password2 = document.querySelector('input[name$="[password][second]"]');

        const emailRegex = /^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/;

        function validateInput(input, condition) {
            if (!condition) {
                input.classList.add('is-invalid');
            } else {
                input.classList.remove('is-invalid');
            }
        }

        firstName.addEventListener('input', function() {
            validateInput(firstName, firstName.value.trim().length >= 2);
        });

        lastName.addEventListener('input', function() {
            validateInput(lastName, lastName.value.trim().length >= 2);
        });

        email.addEventListener('input', function() {
            validateInput(email, emailRegex.test(email.value.trim()));
        });

        password1.addEventListener('input', function() {
            validateInput(password1, password1.value.length >= 6);
            validatePasswordMatch();
        });

        password2.addEventListener('input', function() {
            validatePasswordMatch();
        });

        function validatePasswordMatch() {
            if (password2.value !== "" && password1.value !== password2.value) {
                password2.classList.add('is-invalid');
            } else {
                password2.classList.remove('is-invalid');
            }
        }
    });
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
{% endblock %}

